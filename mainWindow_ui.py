# Form implementation generated from reading ui file '/Users/davem/Python/Redacted/mainWindow.ui'
#
# Created by: PyQt6 UI code generator 6.7.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.gridLayoutWidget.setGeometry(QtCore.QRect(9, -1, 271, 151))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.checkBoxIP = QtWidgets.QCheckBox(parent=self.gridLayoutWidget)
        self.checkBoxIP.setObjectName("checkBoxIP")
        self.gridLayout.addWidget(self.checkBoxIP, 0, 0, 1, 1)
        self.checkBoxLogins = QtWidgets.QCheckBox(parent=self.gridLayoutWidget)
        self.checkBoxLogins.setObjectName("checkBoxLogins")
        self.gridLayout.addWidget(self.checkBoxLogins, 1, 0, 1, 1)
        self.checkBoxMachines = QtWidgets.QCheckBox(parent=self.gridLayoutWidget)
        self.checkBoxMachines.setObjectName("checkBoxMachines")
        self.gridLayout.addWidget(self.checkBoxMachines, 2, 0, 1, 1)
        self.checkBoxMAC = QtWidgets.QCheckBox(parent=self.gridLayoutWidget)
        self.checkBoxMAC.setObjectName("checkBoxMAC")
        self.gridLayout.addWidget(self.checkBoxMAC, 3, 0, 1, 1)
        self.horizontalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(280, 0, 511, 151))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_openFile = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.pushButton_openFile.setObjectName("pushButton_openFile")
        self.horizontalLayout.addWidget(self.pushButton_openFile)
        self.pushButton_openFolder = QtWidgets.QPushButton(parent=self.horizontalLayoutWidget)
        self.pushButton_openFolder.setObjectName("pushButton_openFolder")
        self.horizontalLayout.addWidget(self.pushButton_openFolder)
        self.listView = QtWidgets.QListView(parent=self.centralwidget)
        self.listView.setGeometry(QtCore.QRect(15, 151, 771, 401))
        self.listView.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CursorShape.BlankCursor))
        self.listView.setProperty("showDropIndicator", False)
        self.listView.setDefaultDropAction(QtCore.Qt.DropAction.IgnoreAction)
        self.listView.setSelectionMode(QtWidgets.QAbstractItemView.SelectionMode.NoSelection)
        self.listView.setObjectName("listView")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(parent=self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionOpen_File = QtGui.QAction(parent=MainWindow)
        self.actionOpen_File.setObjectName("actionOpen_File")
        self.actionOpen_Folder = QtGui.QAction(parent=MainWindow)
        self.actionOpen_Folder.setObjectName("actionOpen_Folder")
        self.actionQuit = QtGui.QAction(parent=MainWindow)
        self.actionQuit.setObjectName("actionQuit")
        self.menuFile.addAction(self.actionOpen_File)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpen_Folder)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Daves Wonderful Redactor Program"))
        self.checkBoxIP.setToolTip(_translate("MainWindow", "Redacts IP addresses, replacing them with x.x.x.x"))
        self.checkBoxIP.setText(_translate("MainWindow", "Redact IPs"))
        self.checkBoxLogins.setToolTip(_translate("MainWindow", "Redact user names from start of lines upto the first \'@\' symbol"))
        self.checkBoxLogins.setText(_translate("MainWindow", "Redact Logins"))
        self.checkBoxMachines.setToolTip(_translate("MainWindow", "Redact machine names after the first \'@\' symbol and before the next \'>\' or \';\' symbols"))
        self.checkBoxMachines.setText(_translate("MainWindow", "Redact Machine Names"))
        self.checkBoxMAC.setToolTip(_translate("MainWindow", "Redact MAC addresses, replacing them with --:--:--:--:--:--"))
        self.checkBoxMAC.setText(_translate("MainWindow", "Redact MACs"))
        self.pushButton_openFile.setToolTip(_translate("MainWindow", "Select a single file to redact"))
        self.pushButton_openFile.setText(_translate("MainWindow", "Select a File"))
        self.pushButton_openFolder.setToolTip(_translate("MainWindow", "Select a folder (recursively) to redact *.txt files found"))
        self.pushButton_openFolder.setText(_translate("MainWindow", "Select a Folder"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionOpen_File.setText(_translate("MainWindow", "Open File"))
        self.actionOpen_Folder.setText(_translate("MainWindow", "Open Folder"))
        self.actionQuit.setText(_translate("MainWindow", "Quit"))
